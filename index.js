
// პროექტი 35 - Blood Alcohol Calculator - სისხლში ალკოჰოლის შემცველობის კალკულატორი

//ზოგჯერ ჩახლართული გამოთვლები გვჭირდება, რომელიც არაერთი მოწოდებული მონაცემის საფუძველზე
// სრულდება და შედეგს სწორედ ასე ვიღებთ. შექმენით პროგრამა, რომელიც მოგთხოვთ თქვენს წონას, სქესს,
// ჭიქების რაოდენობას, დალეული სასმელის მოცულობის მიხედვით ალკოჰოლის რაოდენობას და ბოლო ჭიქის 
//მიღების შემდეგ გასული დროის მონაკვეთს. გამოთვალეთ თქვენს სისხლში ალკოჰოლის შემცველობა (BAC) შემდეგი 
//ფორმულის გამოყენებით:
// BAC = (A × 5.14 / W × r) − .015 × H

// სადაც:

// - A არის მთლიანი მოხმარებული ალკოჰოლი, უნციაში (oz).
// - W არის სხეულის წონა ფუნტებში.
// - r არის ალკოჰოლის განაწილების თანაფარდობა:
//   – 0,73 მამაკაცებისთვის
//   – 0,66 ქალებისთვის
// - H არის გასული საათების რაოდენობა ბოლო ჭიქის დალევის მერე.

// პროგრამამ უნდა დაბეჭდოს, შეიძლება თუ არა ავტომობილის მართვა, სისხლში ალკოჰოლის შემცველობის
//  0,08-სთან შედარებით.

// Example Output

// ```shell
// < Your BAC is 0.08
// < It is not legal for you to drive.
// ```

// ### პროექტი 36 - Temperature Converter - ტემპერატურის კონვერტაცია

// შექმენით პროგრამა, რომელიც გარდაქმნის ტემპერატურას ფარენჰეიტიდან ცელსიუსში ან ცელსიუსიდან ფარენჰეიტში.
// მოითხოვეთ საწყისი ტემპერატურა. პროგრამამ უნდა მოითხოვოს კონვერტაციის ტიპი და შემდეგ შეასრულოს
// კონვერტაცია.

// საჭირო ფორმულებია:
// C = (F − 32) × 5 / 9
// და
// F = (C × 9 / 5) + 32

// Example Output

// ```shell
// < Press C to convert from Fahrenheit to Celsius.
// < Press F to convert from Celsius to Fahrenheit.
// < Your choice: C

// < Please enter the temperature in Fahrenheit: 32
// < The temperature in Celsius is 0.
// ```

// ### პროექტი 37 - BMI Calculator - სხეულის მასის ინდექსის კალკულატორი

// შექმენით პროგრამა სხეულის მასის ინდექსის (BMI) გამოთვლისთვის. ადამიანის სიმაღლე დუიმებში უნდა იყოს,
// // ხოლო წონა - ფუნტებში. პროგრამამ უნდა სთხოვოს მომხმარებელს წონის და სიმაღლის მითითება. გამოთვალეთ 
// //BMI შემდეგი ფორმულის გამოყენებით:

// - bmi = (weight / (height × height))\* 703

// თუ BMI არის 18,5-დან 25-მდე, აჩვენეთ, რომ ადამიანის წონა ნორმაშია. თუ BMI ამ შუალედს სცილდება, 
// //დაბეჭდეთ, ადამიანს მცირე წონა აქვს თუ ჭარბი და მიუთითეთ, რომ მიმართოს ექიმს.

// Example Output

// ```shell
// < Your BMI is 19.5.
// < You are within the ideal weight range.

// < Your BMI is 32.5.
// < You are overweight. You should see your doctor.
// ```

// ### პროექტი 38 - Multistate Sales Tax Calculator - შტატშორისი გაყიდვების გადასახადის კალკულატორი

// კომპლექსურ პროგრამებს შეიძლება გადაწყვეტილებებში კიდევ სხვა გადაწყვეტილებები ჰქონდეთ ჩაშენებული,
//  ასე რომ, როდესაც ერთი გადაწყვეტილება მიიღება, დამატებითი გადაწყვეტილებებიც უნდა იქნას მიღებული.
//   შექმენით საგადასახადო კალკულატორი, რომელიც ამუშავებს მრავალ შტატს და მრავალ დაბას თითოეულ შტატში.
//    პროგრამა მოუწოდებს მომხმარებელს შეკვეთის ოდენობას და შტატს, სადაც შეკვეთა გაიგზავნება. ვისკონსინის
//     მკვიდრთათვის, მოითხოვეთ საცხოვრებელი ადგილი.

// • Eau Claire-ის მცხოვრებლებს დამატებით დააკისრეთ 0.005 გადასახადი.
// • Dunn-ის მცხოვრებლების კი დამატებით დააკისრეთ 0.004 გადასახადი.

// ილინოისის მცხოვრებლებს 8% გაყიდვების გადასახადი უნდა დაეკისროთ, დაბის დონის დამატებითი 
// გადასახადის გარეშე. არც ერთ სხვა შტატს გადასახადი არ ეკისრება. შესაბამისად, პროგრამა აჩვენებს გადასახადს 
// (tax) და ჯამს (total - (საწყისი ფასი + გადასახადი)) ვისკონსინისა და ილინოისის მცხოვრებლებისთვის, ყველა
//  დანარჩენი შტატისთვის კი - მხოლოდ ჯამს.

// Example Output

// ```shell
// < What is the order amount? $100
// < What state do you live in? Wisconsin
// < What county do you live in? Dunn
// < The tax is $0.40.
// < The total is $100.40.

// < What is the order amount? $75
// < What state do you live in? Illinois
// < The tax is 8%.
// < The total is $81.00.

// < What is the order amount? 200
// < What state do you live in? California
// < The total is $200.00.
// ```

// ### პროექტი 39 - Numbers to Names - რიცხვები სიტყვებში

// ბევრი პროგრამა ინფორმაციას მომხმარებლისთვის ერთი ფორმით აჩვენებს, მაგრამ იყენებს სხვა ფორმას პროგრამის 
// შიგნით. მაგალითად, შეგიძლიათ აჩვენოთ სიტყვა Blue ეკრანზე, მაგრამ ეკრანს მიღმა გექნებათ ამ ფერის რიცხვითი 
// ან ტექსტუალური მნიშვნელობა, რადგან შეიძლება, სიტყვიერი აღწერილობის წარმოდგენა სხვა ენაზე - ესპანურენოვანი
//  ვიზიტორებისთვის გჭირდებოდეთ. დაწერეთ პროგრამა, რომელიც გადააქცევს რიცხვს 1-დან 12-მდე შესაბამის თვეში.
//   მოითხოვეთ ნომერი და აჩვენეთ შესაბამისი კალენდარული თვე, სადაც 1 იქნება იანვარი, ხოლო 12 - დეკემბერი.
//    ამ დიაპაზონის გარეთ ნებისმიერი მნიშვნელობისთვის დაბეჭდეთ შესაბამისი შეცდომის შეტყობინება.

// Example Output

// ```shell
// < Please enter the number of the month: 3
// < The name of the month is March.
// ```

// - ამ პროგრამისთვის გამოიყენეთ switch/case statement.

// ### პროექტი 40 - Comparing Numbers - რიცხვების შედარება

// ერთი Input მნიშვნელობის შედარება ცნობილ მნიშვნელობასთან საკმაოდ ხშირია, მაგრამ ასევე ხშირად 
//დაგჭირდებათ input-ების კრებულის დამუშავება. დაწერეთ პროგრამა, რომელიც ითხოვს სამ რიცხვს. 
//ჯერ დარწმუნდით, რომ ყველა რიცხვი განსხვავებულია და თუ ისინი არ განსხვავდებიან, მაშინ პროგრამის 
//მუშაობა შეჩერდეს. წინააღმდეგ შემთხვევაში, აჩვენეთ ამ სამიდან ყველაზე დიდი რიცხვი.

// Example Output

// ```shell
// < Enter the first number: 1
// < Enter the second number: 51
// < Enter the third number: 2
// < The largest number is 51.
// ```

// - დაწერეთ ალგორითმი ხელით. ნუ გამოიყენებთ ჩაშენებულ ფუნქციას სიაში ყველაზე დიდი რიცხვის საპოვნელად.

// ### პროექტი 41 - Troubleshooting Car Issues - მანქანის პრობლემების მოგვარება

// საექსპერტო სისტემა (expert system) ხელოვნური ინტელექტის პროგრამის ტიპია, რომელიც იყენებს გარკვეული
// ცოდნის ბაზას და წესების ერთობლიობას იმ დავალების შესასრულებლად, რომელიც შეიძლება შეასრულოს
// ადამიანმა ექსპერტმა. მაგალითად, ბევრი ისეთი ვებსაიტია ხელმისაწვდომი, რომელიც კითხვებზე პასუხების 
//გაცემით გარკვეული სამედიცინო პრობლემის თვითდიაგნოსტიკაში გვეხმარებიან; ტექნიკისა და პროგრამული 
//უზრუნველყოფის მრავალი კომპანია გვთავაზობს პრობლემების მოგვარების ონლაინ ინსტრუმენტებს, რომელიც 
//ადამიანებს მარტივი ტექნიკური საკითხების გადაჭრაში სხვა ადამიანთან დარეკვამდე ეხმარება. შექმენით პროგრამა, 
//რომელიც მომხმარებელს მანქანის პრობლემების მოგვარებაში ეხმარება. თითოეულ კითხვაზე მომხმარებელს "კი/არა"
// პასუხის გაცემა შეეძლება, პროგრამა კი შესაბამისი კითხვების დასმას ამ პასუხების მიხედვით განაგრძობს.

// Example Output

// ```shell
// < Is the car silent when you turn the key? y
// < Are the battery terminals corroded? n
// < The battery cables may be damaged.
// < Replace cables and try again.
// ```